---
import { getTranslations, type Language } from '../i18n/translations';

interface Props {
  lang?: Language;
}

const { lang = 'en' } = Astro.props;
const t = getTranslations(lang);
---

<section id="features" class="features">
	<div class="container">
		<div class="features-header">
			<h2 class="section-title">{t.features.title}</h2>
			<p class="section-description">
				{t.features.subtitle}
			</p>
		</div>

		<div class="feature-large">
			<div class="feature-content">
				<h3>{t.features.realtime.title}</h3>
				<p>
					{t.features.realtime.description}
				</p>
			</div>
			<div class="feature-visual">
				<div class="lottie-container">
					<canvas id="features-lottie-canvas" class="lottie-canvas-feature"></canvas>
				</div>
			</div>
		</div>

		<div class="features-grid">
			<div class="feature-card">
				<div class="feature-icon">
					<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
						<circle cx="12" cy="10" r="3"></circle>
					</svg>
				</div>
				<h3>{t.features.geofencing.title}</h3>
				<p>{t.features.geofencing.description}</p>
			</div>

			<div class="feature-card">
				<div class="feature-icon">
					<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<polyline points="22 12 18 12 15 21 9 3 6 12 2 12"></polyline>
					</svg>
				</div>
				<h3>{t.features.activity.title}</h3>
				<p>{t.features.activity.description}</p>
			</div>

			<div class="feature-card">
				<div class="feature-icon">
					<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
						<circle cx="9" cy="7" r="4"></circle>
						<path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
						<path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
					</svg>
				</div>
				<h3>{t.features.team.title}</h3>
				<p>{t.features.team.description}</p>
			</div>

			<div class="feature-card">
				<div class="feature-icon">
					<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path>
						<path d="M13.73 21a2 2 0 0 1-3.46 0"></path>
					</svg>
				</div>
				<h3>{t.features.notifications.title}</h3>
				<p>{t.features.notifications.description}</p>
			</div>

			<div class="feature-card">
				<div class="feature-icon">
					<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path>
						<polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline>
						<line x1="12" y1="22.08" x2="12" y2="12"></line>
					</svg>
				</div>
				<h3>{t.features.routes.title}</h3>
				<p>{t.features.routes.description}</p>
			</div>

			<div class="feature-card">
				<div class="feature-icon">
					<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
						<line x1="16" y1="2" x2="16" y2="6"></line>
						<line x1="8" y1="2" x2="8" y2="6"></line>
						<line x1="3" y1="10" x2="21" y2="10"></line>
					</svg>
				</div>
				<h3>{t.features.history.title}</h3>
				<p>{t.features.history.description}</p>
			</div>
		</div>
	</div>
</section>

<style>
	.features {
		padding: 6rem 0;
		background: white;
	}

	.container {
		max-width: 1280px;
		margin: 0 auto;
		padding: 0 2rem;
	}

	.features-header {
		text-align: center;
		margin-bottom: 4rem;
	}

	.section-title {
		font-size: 2.5rem;
		font-weight: 800;
		letter-spacing: -0.02em;
		color: var(--color-text);
		margin-bottom: 1rem;
	}

	.section-description {
		font-size: 1.25rem;
		color: var(--color-text-light);
	}

	.feature-large {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 4rem;
		align-items: center;
		margin-bottom: 4rem;
		padding: 3rem;
		background: linear-gradient(135deg, #f8fafc 0%, #e0f2fe 100%);
		border-radius: 1.5rem;
		border: 3px solid var(--color-text);
		box-shadow: 2px 2px 0px var(--color-text);
	}

	.feature-content h3 {
		font-size: 2rem;
		font-weight: 700;
		margin-bottom: 1rem;
		color: var(--color-text);
	}

	.feature-content p {
		font-size: 1.125rem;
		color: var(--color-text-light);
		line-height: 1.7;
	}

	.feature-visual {
		position: relative;
		height: 400px;
	}

	.lottie-container {
		width: 100%;
		height: 100%;
		display: flex;
		align-items: center;
		justify-content: center;
		background: white;
		border-radius: 1rem;
		box-shadow: 2px 2px 0px var(--color-text);
		position: relative;
		overflow: hidden;
		border: 3px solid var(--color-text);
	}

	.lottie-canvas-feature {
		width: 100%;
		max-width: 500px;
		height: 100%;
		max-height: 400px;
	}

	.map-placeholder {
		width: 100%;
		height: 100%;
		background: white;
		border-radius: 1rem;
		box-shadow: 2px 2px 0px var(--color-text);
		position: relative;
		overflow: hidden;
		border: 3px solid var(--color-text);
	}

	.map-marker {
		width: 20px;
		height: 20px;
		background: var(--color-primary);
		border-radius: 50%;
		position: absolute;
		top: 40%;
		left: 45%;
		box-shadow: 0 0 0 8px rgba(59, 130, 246, 0.2);
		animation: pulse 2s infinite;
	}

	.marker-2 {
		top: 55%;
		left: 60%;
		animation-delay: 0.5s;
	}

	.marker-3 {
		top: 30%;
		left: 55%;
		animation-delay: 1s;
	}

	.map-route {
		position: absolute;
		top: 40%;
		left: 45%;
		width: 200px;
		height: 2px;
		background: var(--color-primary);
		transform-origin: left center;
		transform: rotate(25deg);
		opacity: 0.5;
	}

	@keyframes pulse {
		0%, 100% {
			box-shadow: 0 0 0 8px rgba(59, 130, 246, 0.2);
		}
		50% {
			box-shadow: 0 0 0 16px rgba(59, 130, 246, 0);
		}
	}

	.features-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 2rem;
	}

	.feature-card {
		padding: 2rem;
		border-radius: 1rem;
		background: var(--color-bg-gray);
		border: 3px solid var(--color-text);
		box-shadow: 2px 2px 0px var(--color-text);
		transition: all 0.3s;
	}

	.feature-card:hover {
		transform: translate(-2px, -2px);
		box-shadow: 4px 4px 0px var(--color-text);
		border-color: var(--color-primary);
	}

	.feature-icon {
		width: 48px;
		height: 48px;
		background: var(--color-primary);
		color: white;
		border-radius: 0.75rem;
		display: flex;
		align-items: center;
		justify-content: center;
		margin-bottom: 1.5rem;
		border: 2px solid var(--color-text);
	}

	.feature-card h3 {
		font-size: 1.25rem;
		font-weight: 700;
		margin-bottom: 0.75rem;
		color: var(--color-text);
	}

	.feature-card p {
		color: var(--color-text-light);
		line-height: 1.6;
	}

	@media (max-width: 768px) {
		.features {
			padding: 3rem 0;
		}

		.container {
			padding: 0 1rem;
		}

		.section-title {
			font-size: 2rem;
		}

		.feature-large {
			grid-template-columns: 1fr;
			gap: 2rem;
			padding: 2rem;
		}

		.feature-visual {
			height: 300px;
		}

		.lottie-canvas-feature {
			max-height: 300px;
		}

		.features-grid {
			grid-template-columns: 1fr;
		}

		.feature-content h3 {
			font-size: 1.5rem;
		}

		.feature-content p {
			font-size: 1rem;
		}
	}
</style>

<script>
	import { DotLottie } from '@lottiefiles/dotlottie-web';

	function initFeaturesLottie() {
		const canvasElement = document.getElementById('features-lottie-canvas') as HTMLCanvasElement;
		if (!canvasElement) return;

		const dotLottie = new DotLottie({
			autoplay: true,
			loop: true,
			canvas: canvasElement,
			src: "https://lottie.host/d8e2695f-b361-4651-80ae-ce516c47d95c/Hdhew5LEaM.lottie",
		});
	}

	// Initialize when DOM is ready
	if (document.readyState === 'loading') {
		document.addEventListener('DOMContentLoaded', initFeaturesLottie);
	} else {
		initFeaturesLottie();
	}

	// Re-initialize on page navigation (for Astro)
	document.addEventListener('astro:page-load', initFeaturesLottie);
</script>
