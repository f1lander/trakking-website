---
import { getTranslations, type Language } from '../i18n/translations';

interface Props {
  lang?: Language;
}

const { lang = 'en' } = Astro.props;
const t = getTranslations(lang);
---

<section class="ai-features">
	<div class="container">
		<div class="ai-header">
			<span class="ai-badge">
				<svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<path d="M12 2L15.09 8.26L22 9.27L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9.27L8.91 8.26L12 2Z" fill="currentColor"/>
				</svg>
				{t.ai.badge}
			</span>
			<h2 class="ai-title">{t.ai.title}</h2>
			<p class="ai-subtitle">{t.ai.subtitle}</p>
		</div>

		<div class="features-grid">
			<div class="feature-card">
				<div class="feature-icon reports">
					<svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M9 17H7V10H9V17ZM13 17H11V7H13V17ZM17 17H15V13H17V17ZM19 19H5V5H19V19Z" fill="currentColor"/>
					</svg>
				</div>
				<h3 class="feature-title">{t.ai.features.reports.title}</h3>
				<p class="feature-description">{t.ai.features.reports.description}</p>
			</div>

			<div class="feature-card">
				<div class="feature-icon alerts">
					<svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M12 22C13.1 22 14 21.1 14 20H10C10 21.1 10.9 22 12 22ZM18 16V11C18 7.93 16.37 5.36 13.5 4.68V4C13.5 3.17 12.83 2.5 12 2.5C11.17 2.5 10.5 3.17 10.5 4V4.68C7.64 5.36 6 7.92 6 11V16L4 18V19H20V18L18 16Z" fill="currentColor"/>
					</svg>
				</div>
				<h3 class="feature-title">{t.ai.features.alerts.title}</h3>
				<p class="feature-description">{t.ai.features.alerts.description}</p>
			</div>

			<div class="feature-card">
				<div class="feature-icon learning">
					<svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM13 17H11V15H13V17ZM13 13H11V7H13V13Z" fill="currentColor"/>
					</svg>
				</div>
				<h3 class="feature-title">{t.ai.features.learning.title}</h3>
				<p class="feature-description">{t.ai.features.learning.description}</p>
			</div>

			<div class="feature-card">
				<div class="feature-icon predictions">
					<svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M13 2.05V5.08C16.39 5.57 19 8.47 19 12C19 12.9 18.82 13.75 18.5 14.54L20.12 16.16C20.68 14.97 21 13.54 21 12C21 7.36 17.41 3.56 13 2.05ZM12 19C8.13 19 5 15.87 5 12C5 8.47 7.61 5.57 11 5.08V2.05C6.59 3.56 3 7.36 3 12C3 16.97 7.03 21 12 21C13.54 21 14.97 20.68 16.16 20.12L14.54 18.5C13.75 18.82 12.9 19 12 19Z" fill="currentColor"/>
					</svg>
				</div>
				<h3 class="feature-title">{t.ai.features.predictions.title}</h3>
				<p class="feature-description">{t.ai.features.predictions.description}</p>
			</div>
		</div>

		<div class="ai-visual">
			<div class="ai-demo">
				<div class="demo-screen">
					<div class="demo-header">
						<div class="demo-dots">
							<span></span>
							<span></span>
							<span></span>
						</div>
						<p>AI Dashboard</p>
					</div>
					<div class="demo-content">
						<div class="ai-pulse"></div>
						<div class="data-lines">
							<div class="data-line" style="--delay: 0s; --width: 85%"></div>
							<div class="data-line" style="--delay: 0.2s; --width: 65%"></div>
							<div class="data-line" style="--delay: 0.4s; --width: 90%"></div>
							<div class="data-line" style="--delay: 0.6s; --width: 75%"></div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<style>
	.ai-features {
		padding: 6rem 0;
		background: linear-gradient(180deg, #f8fafc 0%, #ffffff 100%);
		position: relative;
		overflow: hidden;
	}

	.container {
		max-width: 1280px;
		margin: 0 auto;
		padding: 0 2rem;
	}

	.ai-header {
		text-align: center;
		margin-bottom: 4rem;
	}

	.ai-badge {
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
		padding: 0.5rem 1rem;
		background: linear-gradient(135deg, #00E887, #5affb0);
		color: white;
		border-radius: 50px;
		font-weight: 600;
		font-size: 0.875rem;
		margin-bottom: 1.5rem;
		box-shadow: 2px 2px 0px var(--color-text);
		border: 2px solid var(--color-text);
	}

	.ai-badge svg {
		animation: sparkle 2s ease-in-out infinite;
	}

	@keyframes sparkle {
		0%, 100% { transform: rotate(0deg) scale(1); }
		50% { transform: rotate(180deg) scale(1.2); }
	}

	.ai-title {
		font-size: 2.75rem;
		font-weight: 800;
		color: var(--color-text);
		margin-bottom: 1rem;
		letter-spacing: -0.02em;
	}

	.ai-subtitle {
		font-size: 1.125rem;
		color: var(--color-text-light);
		max-width: 700px;
		margin: 0 auto;
		line-height: 1.7;
	}

	.features-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
		gap: 2rem;
		margin-bottom: 4rem;
	}

	.feature-card {
		background: white;
		padding: 2rem;
		border-radius: 16px;
		box-shadow: 2px 2px 0px var(--color-text);
		transition: all 0.3s ease;
		border: 3px solid var(--color-text);
	}

	.feature-card:hover {
		transform: translate(-2px, -2px);
		box-shadow: 4px 4px 0px var(--color-text);
		border-color: var(--color-primary);
	}

	.feature-icon {
		width: 64px;
		height: 64px;
		border-radius: 12px;
		display: flex;
		align-items: center;
		justify-content: center;
		margin-bottom: 1.5rem;
		color: white;
		border: 2px solid var(--color-text);
	}

	.feature-icon.reports {
		background: linear-gradient(135deg, #00E887, #5affb0);
	}

	.feature-icon.alerts {
		background: linear-gradient(135deg, #00c772, #00E887);
	}

	.feature-icon.learning {
		background: linear-gradient(135deg, #2C2B47, #454464);
	}

	.feature-icon.predictions {
		background: linear-gradient(135deg, #1a1930, #2C2B47);
	}

	.feature-title {
		font-size: 1.25rem;
		font-weight: 700;
		color: var(--color-text);
		margin-bottom: 0.75rem;
	}

	.feature-description {
		font-size: 1rem;
		color: var(--color-text-light);
		line-height: 1.6;
	}

	.ai-visual {
		max-width: 600px;
		margin: 0 auto;
		padding: 3rem 0;
	}

	.ai-demo {
		position: relative;
	}

	.demo-screen {
		background: linear-gradient(145deg, #1e293b, #334155);
		border-radius: 20px;
		padding: 1.5rem;
		box-shadow: 2px 2px 0px var(--color-text);
		border: 3px solid var(--color-text);
	}

	.demo-header {
		display: flex;
		align-items: center;
		gap: 1rem;
		margin-bottom: 1.5rem;
		padding-bottom: 1rem;
		border-bottom: 1px solid rgba(255, 255, 255, 0.1);
	}

	.demo-dots {
		display: flex;
		gap: 0.5rem;
	}

	.demo-dots span {
		width: 12px;
		height: 12px;
		border-radius: 50%;
		background: rgba(255, 255, 255, 0.3);
	}

	.demo-header p {
		color: rgba(255, 255, 255, 0.8);
		font-weight: 600;
		font-size: 0.875rem;
	}

	.demo-content {
		position: relative;
		min-height: 200px;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		gap: 2rem;
	}

	.ai-pulse {
		width: 80px;
		height: 80px;
		background: radial-gradient(circle, #00E887 0%, transparent 70%);
		border-radius: 50%;
		animation: pulse-ai 2s ease-in-out infinite;
	}

	@keyframes pulse-ai {
		0%, 100% {
			transform: scale(1);
			opacity: 1;
		}
		50% {
			transform: scale(1.3);
			opacity: 0.5;
		}
	}

	.data-lines {
		width: 100%;
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}

	.data-line {
		height: 8px;
		background: linear-gradient(90deg, #00E887, #5affb0);
		border-radius: 4px;
		width: 0;
		animation: grow 1.5s ease-out infinite;
		animation-delay: var(--delay);
		max-width: var(--width);
	}

	@keyframes grow {
		0% { width: 0; }
		50% { width: var(--width); }
		100% { width: 0; }
	}

	@media (max-width: 768px) {
		.ai-features {
			padding: 4rem 0;
		}

		.ai-title {
			font-size: 2rem;
		}

		.ai-subtitle {
			font-size: 1rem;
		}

		.features-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}

		.container {
			padding: 0 1rem;
		}
	}
</style>
